version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: backend-fastapi/Dockerfile
    image: backend-fastapi:mtvs_final
    container_name: backend-fastapi-container
    restart: on-failure
    ports:
      - "19652:8000"
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/workspace/app
      - ./storage:/workspace/storage
      - ./generated:/workspace/generated
      - .env:/workspace/.env
    depends_on:
      - postgres
      - redis
      - qdrant
      - embedding-service
    networks:
      - backend-network

  postgres:
    image: postgres:15
    container_name: backend-postgres-container
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: on-failure
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: backend-redis-container
    ports:
      - "6379:6379"
    restart: on-failure
    networks:
      - backend-network


  qdrant:
    image: qdrant/qdrant:latest
    container_name: backend-qdrant-container
    ports:
      - "6333:6333"
      - "6334:6334"
    restart: on-failure
    volumes:
      - ./qdrant_storage:/qdrant/storage
    networks:
      - backend-network


  embedding-service:
    build:
      context: ./embedding-fastapi
      dockerfile: Dockerfile
    container_name: backend-embedding-container
    ports:
      - "8002:8002"
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    deploy:
      resources:
        limits:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure
    networks:
      - backend-network


networks:
  backend-network:
    driver: bridge